# ======================================================
#  Version variables:
# ======================================================
SET(@PROJECT_NAME@_VERSION @PROJECT_VERSION@)
SET(@PROJECT_NAME@_VERSION_MAJOR  @PROJECT_VERSION_MAJOR@)
SET(@PROJECT_NAME@_VERSION_MINOR  @PROJECT_VERSION_MINOR@)
SET(@PROJECT_NAME@_VERSION_PATCH  @PROJECT_VERSION_PATCH@)

@PACKAGE_INIT@


#
# common prefix to make things cross-compile save:
#
#get_filename_component(_@PROJECT_NAME@_rootdir ${CMAKE_CURRENT_LIST_DIR}/../../../ ABSOLUTE)

# include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake")

set(@PROJECT_NAME@_DEFINITIONS @DEFINITIONS@)
#add_definitions( ${@PROJECT_NAME@_DEFINITIONS} )

################################################################################
# Include directories to add to the user project:
################################################################################

get_filename_component(@PROJECT_NAME@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
#if (MSVC)
#set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/include/")
set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/include/")
#else()
#set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@INSTALL_CMAKE_DIR@")
#set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/@INSTALL_CMAKE_DIR@")
#endif()

#set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "@PROJECT_SOURCE_DIR@" "@PROJECT_BINARY_DIR@" "@CMAKE_INSTALL_PREFIX@/@INSTALL_CMAKE_DIR@")
#set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "@PROJECT_SOURCE_DIR@" "@PROJECT_BINARY_DIR@" "${_@PROJECT_NAME@_rootdir}/@INSTALL_CMAKE_DIR@")
include_directories(${@PROJECT_NAME@_INCLUDE_DIRS})

################################################################################
# Link directories to add to the user project:
################################################################################

# TODO Provide the libs directory anyway, it may be needed in some cases.
#SET(@PROJECT_NAME@_LIB_DIR @PACKAGE_INSTALL_DIR@)
#LINK_DIRECTORIES(${@PROJECT_NAME@_LIB_DIR})

# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET @PROJECT_NAME@ AND NOT @PROJECT_NAME@_BINARY_DIR)
  # include("${@PROJECT_NAME@_CMAKE_DIR}/@PROJECT_NAME@Targets.cmake")
endif()

# Some additional settings are required if project is built as static libs
set(@PROJECT_NAME@_SHARED @BUILD_SHARED_LIBS@)

################################################################################
# Link libraries:
################################################################################
if (MSVC)
    #set(@PROJECT_NAME@_LIBRARIES_RELEASE "@CMAKE_INSTALL_PREFIX@/@INSTALL_BIN_DIR@/@PROJECT_NAME@@CMAKE_SHARED_LIBRARY_SUFFIX@")
    #set(@PROJECT_NAME@_LIBRARIES_DEBUG "@CMAKE_INSTALL_PREFIX@/@INSTALL_BIN_DIR@/@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@@CMAKE_SHARED_LIBRARY_SUFFIX@")

    #set(@PROJECT_NAME@_LIBRARIES_RELEASE "${_@PROJECT_NAME@_rootdir}/@INSTALL_BIN_DIR@/@PROJECT_NAME@@CMAKE_SHARED_LIBRARY_SUFFIX@")
    #set(@PROJECT_NAME@_LIBRARIES_DEBUG "${_@PROJECT_NAME@_rootdir}/@INSTALL_BIN_DIR@/@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@@CMAKE_SHARED_LIBRARY_SUFFIX@")

    #set(@PROJECT_NAME@_LIBRARIES_RELEASE "@CMAKE_INSTALL_PREFIX@/@INSTALL_LIB_DIR@/@PROJECT_NAME@.lib")
    #set(@PROJECT_NAME@_LIBRARIES_DEBUG "@CMAKE_INSTALL_PREFIX@/@INSTALL_LIB_DIR@/@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@.lib")
    set(@PROJECT_NAME@_LIBRARIES_RELEASE "${PACKAGE_PREFIX_DIR}/@INSTALL_LIB_DIR@/@PROJECT_NAME@.lib")
    set(@PROJECT_NAME@_LIBRARIES_DEBUG "${PACKAGE_PREFIX_DIR}/@INSTALL_LIB_DIR@/@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@.lib")
else()
    #set(@PROJECT_NAME@_LIBRARIES_RELEASE "@CMAKE_INSTALL_PREFIX@/@INSTALL_LIB_DIR@/lib@PROJECT_NAME@@CMAKE_SHARED_LIBRARY_SUFFIX@")
    #set(@PROJECT_NAME@_LIBRARIES_DEBUG "@CMAKE_INSTALL_PREFIX@/@INSTALL_LIB_DIR@/lib@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@@CMAKE_SHARED_LIBRARY_SUFFIX@")
    set(@PROJECT_NAME@_LIBRARIES_RELEASE "${PACKAGE_PREFIX_DIR}/@INSTALL_LIB_DIR@/lib@PROJECT_NAME@@CMAKE_SHARED_LIBRARY_SUFFIX@")
    set(@PROJECT_NAME@_LIBRARIES_DEBUG "${PACKAGE_PREFIX_DIR}/@INSTALL_LIB_DIR@/lib@PROJECT_NAME@@CMAKE_DEBUG_POSTFIX@@CMAKE_SHARED_LIBRARY_SUFFIX@")
endif()
if(@CMAKE_BUILD_TYPE@ MATCHES Debug)
    list(APPEND @PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARIES_DEBUG})
else()
    list(APPEND @PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARIES_RELEASE})
endif()

#set(@PROJECT_NAME@_EXECUTABLE bar)

check_required_components("@PROJECT_NAME@")
